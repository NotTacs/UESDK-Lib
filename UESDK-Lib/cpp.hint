// Hint files help the Visual Studio IDE interpret Visual C++ identifiers
// such as names of functions and macros.
// For more information see https://go.microsoft.com/fwlink/?linkid=865984
#define DECLARE_UFUNCTION(StaticModifier, ReturnType, FunctionName, ParamStructName, FillParamsCode) StaticModifier ReturnType FunctionName() { static UFunction* Func = nullptr; if (!Func) Func = StaticClass()->FindFunctionByName(#FunctionName); ParamStructName Params{}; FillParamsCode auto Flgs = Func->FunctionFlags; Func->FunctionFlags |= 0x400; if constexpr (std::is_same_v<decltype(StaticModifier), decltype(static)>) { StaticClass()->GetDefaultObj()->ProcessEvent(Func, &Params); } else { ProcessEvent(Func, &Params); } Func->FunctionFlags = Flgs; if constexpr (requires { Params.ReturnValue; }) { return Params.ReturnValue; } }
#define DEFINE_UFUNCTION(ClassName, ReturnType, FunctionName, ParamStructName, ParamList, AssignParamsCode, IsStatic) ReturnType ClassName::FunctionName ParamList { static UFunction* Func = nullptr; if (!Func) Func = StaticClass()->FindFunctionByName(TEXT(#FunctionName)); ParamStructName Params{}; AssignParamsCode if constexpr (IsStatic) { StaticClass()->GetDefaultObj()->ProcessEvent(Func, &Params); } else { ProcessEvent(Func, &Params); } if constexpr (requires { Params.ReturnValue; }) { return Params.ReturnValue; } }
#define DEFINE_UFUNCTION_STATIC(ClassName, ReturnType, FunctionName, ParamStructName, ParamList, AssignParamsCode) ReturnType ClassName::FunctionName ParamList { static UFunction* Func = nullptr; if (!Func) Func = StaticClass()->FindFunctionByName(#FunctionName); ParamStructName Params{}; AssignParamsCode StaticClass()->GetDefaultObj()->ProcessEvent(Func, &Params); if constexpr (requires { Params.ReturnValue; }) { return Params.ReturnValue; } }
#define DEFINE_UFUNCTION_INLINE(ReturnType, FunctionName, ParamStructName, ParamList, AssignParamsCode) inline ReturnType FunctionName ParamList { static UFunction* Func = nullptr; if (!Func) Func = StaticClass()->FindFunctionByName(#FunctionName); ParamStructName Params{}; AssignParamsCode ProcessEvent(Func, &Params); if constexpr (requires { Params.ReturnValue; }) { return Params.ReturnValue; } }
